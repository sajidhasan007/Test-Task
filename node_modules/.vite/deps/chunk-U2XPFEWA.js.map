{
  "version": 3,
  "sources": ["../../@dnd-kit/utilities/src/hooks/useCombinedRefs.ts", "../../@dnd-kit/utilities/src/execution-context.ts", "../../@dnd-kit/utilities/src/hooks/useIsomorphicLayoutEffect.ts", "../../@dnd-kit/utilities/src/hooks/useInterval.ts", "../../@dnd-kit/utilities/src/hooks/useLazyMemo.ts", "../../@dnd-kit/utilities/src/hooks/useNodeRef.ts", "../../@dnd-kit/utilities/src/hooks/useUniqueId.ts", "../../@dnd-kit/utilities/src/adjustment.ts", "../../@dnd-kit/utilities/src/css.ts"],
  "sourcesContent": ["import {useMemo} from 'react';\n\nexport function useCombinedRefs<T>(\n  ...refs: ((node: T) => void)[]\n): (node: T) => void {\n  return useMemo(\n    () => (node: T) => {\n      refs.forEach((ref) => ref(node));\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    refs\n  );\n}\n", "// https://github.com/facebook/react/blob/master/packages/shared/ExecutionEnvironment.js\nexport const canUseDOM =\n  typeof window !== 'undefined' &&\n  typeof window.document !== 'undefined' &&\n  typeof window.document.createElement !== 'undefined';\n", "import {useEffect, useLayoutEffect} from 'react';\n\nimport {canUseDOM} from '../execution-context';\n\n/**\n * A hook that resolves to useEffect on the server and useLayoutEffect on the client\n * @param callback {function} Callback function that is invoked when the dependencies of the hook change\n */\nexport const useIsomorphicLayoutEffect = canUseDOM\n  ? useLayoutEffect\n  : useEffect;\n", "import {useCallback, useRef} from 'react';\n\nexport function useInterval() {\n  const intervalRef = useRef<number | null>(null);\n\n  const set = useCallback((listener: Function, duration: number) => {\n    intervalRef.current = setInterval(listener, duration);\n  }, []);\n\n  const clear = useCallback(() => {\n    if (intervalRef.current !== null) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n  }, []);\n\n  return [set, clear] as const;\n}\n", "import {useMemo, useRef} from 'react';\n\nexport function useLazyMemo<T>(\n  callback: (prevValue: T | undefined) => T,\n  dependencies: any[]\n) {\n  const valueRef = useRef<T>();\n\n  return useMemo(\n    () => {\n      const newValue = callback(valueRef.current);\n      valueRef.current = newValue;\n\n      return newValue;\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [...dependencies]\n  );\n}\n", "import {useRef, useCallback} from 'react';\n\nexport function useNodeRef() {\n  const node = useRef<HTMLElement | null>(null);\n  const setNodeRef = useCallback((element: HTMLElement | null) => {\n    node.current = element;\n  }, []);\n\n  return [node, setNodeRef] as const;\n}\n", "import {useMemo} from 'react';\n\nlet ids: Record<string, number> = {};\n\nexport function useUniqueId(prefix: string, value?: string) {\n  return useMemo(() => {\n    if (value) {\n      return value;\n    }\n\n    const id = ids[prefix] == null ? 0 : ids[prefix] + 1;\n    ids[prefix] = id;\n\n    return `${prefix}-${id}`;\n  }, [prefix, value]);\n}\n", "function createAdjustmentFn(modifier: number) {\n  return <T extends Record<U, number>, U extends string>(\n    object: T,\n    ...adjustments: Partial<T>[]\n  ): T => {\n    return adjustments.reduce<T>(\n      (accumulator, adjustment) => {\n        const entries = Object.entries(adjustment) as [U, number][];\n\n        for (const [key, valueAdjustment] of entries) {\n          const value = accumulator[key];\n\n          if (value != null) {\n            accumulator[key] = (value + modifier * valueAdjustment) as T[U];\n          }\n        }\n\n        return accumulator;\n      },\n      {\n        ...object,\n      }\n    );\n  };\n}\n\nexport const add = createAdjustmentFn(1);\nexport const subtract = createAdjustmentFn(-1);\n", "export type Transform = {\n  x: number;\n  y: number;\n  scaleX: number;\n  scaleY: number;\n};\n\nexport interface Transition {\n  property: string;\n  easing: string;\n  duration: number;\n}\n\nexport const CSS = Object.freeze({\n  Translate: {\n    toString(transform: Transform | null) {\n      if (!transform) {\n        return;\n      }\n\n      const {x, y} = transform;\n\n      return `translate3d(${x ? Math.round(x) : 0}px, ${\n        y ? Math.round(y) : 0\n      }px, 0)`;\n    },\n  },\n  Scale: {\n    toString(transform: Transform | null) {\n      if (!transform) {\n        return;\n      }\n\n      const {scaleX, scaleY} = transform;\n\n      return `scaleX(${scaleX}) scaleY(${scaleY})`;\n    },\n  },\n  Transform: {\n    toString(transform: Transform | null) {\n      if (!transform) {\n        return;\n      }\n\n      return [\n        CSS.Translate.toString(transform),\n        CSS.Scale.toString(transform),\n      ].join(' ');\n    },\n  },\n  Transition: {\n    toString({property, duration, easing}: Transition) {\n      return `${property} ${duration}ms ${easing}`;\n    },\n  },\n});\n"],
  "mappings": ";;;;;;;SAEgBA,mBACXC,MAAAA;AAEH,aAAOC;IACL,MAAOC,UAAD;AACJF,WAAKG,QAASC,SAAQA,IAAIF,IAAD,CAAzB;IACD;;IAEDF;EALY;AAOf;ACXD,IAAaK,YACX,OAAOC,WAAW,eAClB,OAAOA,OAAOC,aAAa,eAC3B,OAAOD,OAAOC,SAASC,kBAAkB;ACI3C,IAAaC,4BAA4BJ,YACrCK,+BACAC;SCRYC,cAAAA;AACd,QAAMC,kBAAcC,qBAAsB,IAAhB;AAE1B,QAAMC,UAAMC,0BAAY,CAACC,UAAoBC,aAArB;AACtBL,gBAAYM,UAAUC,YAAYH,UAAUC,QAAX;EAClC,GAAE,CAAA,CAFoB;AAIvB,QAAMG,YAAQL,0BAAY,MAAA;AACxB,QAAIH,YAAYM,YAAY,MAAM;AAChCG,oBAAcT,YAAYM,OAAb;AACbN,kBAAYM,UAAU;IACvB;EACF,GAAE,CAAA,CALsB;AAOzB,SAAO,CAACJ,KAAKM,KAAN;AACR;SCfeE,YACdC,UACAC,cAAAA;AAEA,QAAMC,eAAWZ,qBAAM;AAEvB,aAAOb;IACL,MAAA;AACE,YAAM0B,WAAWH,SAASE,SAASP,OAAV;AACzBO,eAASP,UAAUQ;AAEnB,aAAOA;IACR;;IAED,CAAC,GAAGF,YAAJ;EARY;AAUf;SChBeG,aAAAA;AACd,QAAM1B,WAAOY,qBAA2B,IAArB;AACnB,QAAMe,iBAAab,0BAAac,aAAD;AAC7B5B,SAAKiB,UAAUW;EAChB,GAAE,CAAA,CAF2B;AAI9B,SAAO,CAAC5B,MAAM2B,UAAP;AACR;ACPD,IAAIE,MAA8B,CAAA;AAElC,SAAgBC,YAAYC,QAAgBC,OAAAA;AAC1C,aAAOjC,sBAAQ,MAAA;AACb,QAAIiC,OAAO;AACT,aAAOA;IACR;AAED,UAAMC,KAAKJ,IAAIE,MAAD,KAAY,OAAO,IAAIF,IAAIE,MAAD,IAAW;AACnDF,QAAIE,MAAD,IAAWE;AAEd,WAAA,GAAUF,UAAUE;EACrB,GAAE,CAACF,QAAQC,KAAT,CATW;AAUf;ACfD,SAASE,mBAAmBC,UAA5B;AACE,SAAO,CACLC,WACGC,gBAFE;AAIL,WAAOA,YAAYC,OACjB,CAACC,aAAaC,eAAd;AACE,YAAMC,UAAUC,OAAOD,QAAQD,UAAf;AAEhB,iBAAW,CAACG,KAAKC,eAAN,KAA0BH,SAAS;AAC5C,cAAMT,QAAQO,YAAYI,GAAD;AAEzB,YAAIX,SAAS,MAAM;AACjBO,sBAAYI,GAAD,IAASX,QAAQG,WAAWS;QACxC;MACF;AAED,aAAOL;IACR,GACD;MACE,GAAGH;IADL,CAdK;EAkBR;AACF;AAED,IAAaS,MAAMX,mBAAmB,CAAD;AACrC,IAAaY,WAAWZ,mBAAmB,EAAD;ICd7Ba,MAAML,OAAOM,OAAO;EAC/BC,WAAW;IACTC,SAASC,WAAD;AACN,UAAI,CAACA,WAAW;AACd;MACD;AAED,YAAM;QAACC;QAAGC;MAAJ,IAASF;AAEf,aAAA,eAAsBC,IAAIE,KAAKC,MAAMH,CAAX,IAAgB,QACxCC,IAAIC,KAAKC,MAAMF,CAAX,IAAgB;IAEvB;EAXQ;EAaXG,OAAO;IACLN,SAASC,WAAD;AACN,UAAI,CAACA,WAAW;AACd;MACD;AAED,YAAM;QAACM;QAAQC;MAAT,IAAmBP;AAEzB,aAAA,UAAiBM,kBAAkBC;IACpC;EATI;EAWPC,WAAW;IACTT,SAASC,WAAD;AACN,UAAI,CAACA,WAAW;AACd;MACD;AAED,aAAO,CACLJ,IAAIE,UAAUC,SAASC,SAAvB,GACAJ,IAAIS,MAAMN,SAASC,SAAnB,CAFK,EAGLS,KAAK,GAHA;IAIR;EAVQ;EAYXC,YAAY;IACVX,SAAS;MAACY;MAAU9C;MAAU+C;IAArB,GAAD;AACN,aAAA,GAAUD,YAAY9C,cAAc+C;IACrC;EAHS;AArCmB,CAAd;",
  "names": ["useCombinedRefs", "refs", "useMemo", "node", "forEach", "ref", "canUseDOM", "window", "document", "createElement", "useIsomorphicLayoutEffect", "useLayoutEffect", "useEffect", "useInterval", "intervalRef", "useRef", "set", "useCallback", "listener", "duration", "current", "setInterval", "clear", "clearInterval", "useLazyMemo", "callback", "dependencies", "valueRef", "newValue", "useNodeRef", "setNodeRef", "element", "ids", "useUniqueId", "prefix", "value", "id", "createAdjustmentFn", "modifier", "object", "adjustments", "reduce", "accumulator", "adjustment", "entries", "Object", "key", "valueAdjustment", "add", "subtract", "CSS", "freeze", "Translate", "toString", "transform", "x", "y", "Math", "round", "Scale", "scaleX", "scaleY", "Transform", "join", "Transition", "property", "easing"]
}
